{"version":3,"names":[],"mappings":"","sources":["modules/drawChart.js"],"sourcesContent":["import {backgroundColorFromData} from '/js/modules/chartHelper.min.js';\n\nconst menuIcon = document.getElementById('menu-icon');\n\nconst drawChart = (userData) => {\n  let highlightedValues = [];\n  // const labels = userData.allDomains.map((domain) => domain.domain);\n  // const datasets = [userData.allDomains.map((domain) => domain.connections)];\n\n  // Chart.defaults.color = \"#172c66\";\n  // Chart.defaults.borderColor = \"#8bd3dd\";\n  // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n  // const hashtags = userData.hashtags.slice(0, 10);\n  const hashtags = userData.hashtags;\n  const minFontSize = 16;\n  const maxFontSize = 50;\n  // const minFontSize = Math.min(200/hashtags.length, 10);\n  // const maxFontSize = Math.min(300/hashtags.length, 40);\n\n  // console.log({minFontSize, maxFontSize});\n\n  const maxCount = Math.max(...hashtags.map(hashtag => hashtag.count));\n  const minCount = Math.min(...hashtags.map(hashtag => hashtag.count));\n\n  const scale = (num, in_min, in_max, out_min, out_max) => (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n\n  const data = {\n    // labels: hashtags.map(hashtag => `#${hashtag.hashtag}`),\n    labels: hashtags.map(hashtag => hashtag.hashtag),\n    datasets: [\n      {\n        label: `Your top ${hashtags.length.toLocaleString()} hashtags`,\n        // data: hashtags.map((hashtag) => hashtag.count)\n        data: hashtags.map((hashtag) => scale(hashtag.count, minCount, maxCount, minFontSize, maxFontSize ))\n        // data: hashtags.map((d, i) => {\n        //   let size = 5 + d.count * 5;\n        //   if (size > 45){\n        //     size = 45;\n        //   }\n        //   if (i > hashtags.length - 5){\n        //     size = 50 + (hashtags.length - i);\n        //   }\n\n        //   return size;\n        // })\n      },\n    ],\n  };\n\n  const chart = new Chart(document.getElementById(\"chart\"), {\n    type: \"wordCloud\",\n    data: data,\n    options: {\n      // fit: true,\n      // responsive: true,\n      padding: 3,\n      plugins: {\n        customCanvasBackgroundColor: \"#fff\",\n        tooltip: {\n          callbacks: {\n            title: (tooltipItems) => `#${hashtags[tooltipItems[0].dataIndex].hashtag}`,\n            label: (context) => `used ${hashtags[context.dataIndex].count} time(s)`\n          }\n        }\n      }\n    },\n    plugins: [{\n      id: 'customCanvasBackgroundColor',\n      beforeDraw: (chart, args, options) => {\n        const {ctx} = chart;\n        ctx.save();\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.fillStyle = options.color || '#fff';\n        ctx.fillRect(0, 0, chart.width, chart.height);\n        ctx.restore();\n      }\n    }],\n  });\n\n};\n\nexport default drawChart;\n"],"file":"drawChart.min.js"}
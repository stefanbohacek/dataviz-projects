{"version":3,"names":[],"mappings":"","sources":["modules/showData.js"],"sourcesContent":["import drawChart from \"./drawChart.min.js\";\nimport sortArrayOfObjects from \"/js/modules/sortArrayOfObjects.min.js\";\nimport {isMobile} from '/js/modules/browserHelpers.min.js';\nimport {jsonToCSV, downloadCSV} from \"/js/modules/csvHelper.min.js\";\n\nconst dataDownloadPrompt = document.getElementById(\"download-data\");\nconst loadingScreen = document.getElementById(\"loading\");\n\nconst profileImage = document.getElementsByClassName(\"profile-image\");\nconst accountNameEl = document.getElementById(\"account-name\");\nconst userVisualization = document.getElementById(\"viz-user\");\n\nconst connectionsBreakdownEl = document.getElementById(\"connections-breakdown\");\nconst topDomainsCountEl = document.getElementById(\"top-servers-count\");\nconst topServersListEl = document.getElementById(\"top-servers-list\");\nconst domainsUniqueConnectionsEl = document.getElementById(\"domains-unique-connections\");\n\nconst showData = async (userData) => {\n  loadingScreen.classList.add(\"d-none\");\n  userVisualization.classList.remove(\"d-none\");\n  userVisualization.scrollIntoView({\n    behavior: \"smooth\",\n  });\n\n  // setTimeout(() => {\n  //   loadingScreen.classList.add(\"d-none\");\n  // }, 2000);\n\n  accountNameEl.innerHTML = userData.name;\n\n  if (userData.profileImageURL) {\n    profileImage[1].src = userData.profileImageURL;\n  }\n\n  // connectionsBreakdownEl.innerHTML = `\n  //     <li>\n  //         You follow <strong>${userData.followingCount}</strong> accounts across <strong>${userData.followingInstancesCount}</strong> servers\n  //     </li>\n  //     <li>\n  //         You have <strong>${userData.followersCount}</strong> followers across <strong>${userData.followersInstancesCount}</strong> servers\n  //     </li>\n\n  //     <li>\n  //         You have <strong>${userData.connectionsCount} connections</strong> across <strong>${userData.totalDomainsCount} servers</strong> in total\n  //     </li>\n  // `;\n  // topDomainsCountEl.innerHTML = userData.topDomainsCount;\n  // topServersListEl.innerHTML = userData.topDomains\n  //   .map(\n  //     (domain) =>\n  //       `<li><code>${domain.domain}</code>: <strong>${domain.connections}</strong> connections (${domain.percentage}%)</li>`\n  //   )\n  //   .join(\"\");\n  // domainsUniqueConnectionsEl.innerHTML = `Out of the ${userData.totalDomainsCount} servers you are connected to, <strong>${userData.uniqueDomainsCount}</strong> of them have <strong>only one connection</strong> on it.`;\n\n  let hashtags = [];\n\n  for (let hashtag in userData.hashtags){\n    hashtags.push({\n      hashtag: hashtag,\n      count: userData.hashtags[hashtag]\n    })\n  }\n\n  hashtags = sortArrayOfObjects(hashtags, \"count\", true);\n  // userData.hashtags = hashtags;\n  userData.hashtags = hashtags.slice(0,isMobile() ? 50 : 250);\n  drawChart(userData);\n\n  dataDownloadPrompt.innerHTML = `\n      <button class=\"small d-inline d-md-block mt-md-3\" id=\"download-data-btn\">Download the full data</button>\n  `;\n\n  const csv = jsonToCSV(hashtags);\n\n  document\n    .getElementById(\"download-data-btn\")\n    .addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      downloadCSV(csv, \"fediverse-hashtags.csv\");\n    });\n\n    const resultsTableWrapper = document.getElementById(\"results-table\");\n    resultsTableWrapper.innerHTML = `\n    <table class=\"table table-hover mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Hashtag</th>\n          <th scope=\"col\">Count</th>\n        </tr>\n      </thead>\n      <tbody>\n      ${\n        hashtags.map(hashtag => `\n          <tr>\n            <td>${hashtag.hashtag}</td>\n            <td>${hashtag.count.toLocaleString()}</td>\n          </tr>        \n        `).join(\"\")\n      }\n    </table>\n    `;\n};\n\nexport default showData;\n"],"file":"showData.min.js"}
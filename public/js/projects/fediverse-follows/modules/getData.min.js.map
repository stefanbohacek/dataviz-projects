{"version":3,"names":[],"mappings":"","sources":["modules/getData.js"],"sourcesContent":["// global modules\n\nimport getServerPlatform from \"/js/modules/getServerPlatform.min.js\";\nimport getUrlParams from \"/js/modules/getUrlParams.min.js\";\nimport stripHTML from \"/js/modules/stripHTML.min.js\";\nimport saveData from \"/js/modules/saveData.min.js\";\n\n// local modules\n\nimport fetchData from \"./fetchData.min.js\";\nimport startGame from \"./startGame.min.js\";\n\nconst greeting = document.getElementsByClassName(\"greeting\");\nconst loadingScreen = document.getElementById(\"loading\");\nconst profileImage = document.getElementsByClassName(\"profile-image\");\n\nconst getData = async () => {\n  let userData = {};\n  const { token, instance, username, userid, avatarUrl } = getUrlParams(true);\n\n  if (token && instance) {\n    const platform = await getServerPlatform(instance);\n    let userInfo = {},\n      profileImageURL;\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"pixelfed\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n      case \"gotosocial\":\n        userInfo = await fetchData(\n          instance,\n          platform,\n          \"accounts/verify_credentials\",\n          token\n        );\n        console.log(\"userInfo\", userInfo);\n        profileImageURL = userInfo.avatar_static || userInfo.avatar;\n\n        if (userInfo.display_name) {\n          userData.name = userInfo.display_name || \"there\";\n        }\n\n        if (userInfo.acct) {\n          userData.account = `@${userInfo.acct}@${instance}`;\n\n          if (!userData.name) {\n            userData.name = `@${userInfo.acct}`;\n          }\n        }\n\n        if (!userData.name) {\n          userData.name = \"there\";\n        }\n\n        if (profileImageURL) {\n          userData.profileImageURL = profileImageURL;\n        }\n\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n      case \"sharkey\":\n        userInfo.id = userid;\n        userData.name = username;\n        userData.account = `@${username}@${instance}`;\n        userData.profileImageURL = avatarUrl;\n\n        break;\n      default:\n        break;\n    }\n\n    loadingScreen.classList.remove(\"d-none\");\n    greeting[0].innerHTML = `Hello ${userData.name}!`;\n\n    if (userData.profileImageURL) {\n      profileImage[0].src = userData.profileImageURL;\n    }\n\n    const loading = document.getElementById(\"loading\");\n\n    loading.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    let following;\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"pixelfed\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n      case \"gotosocial\":\n        following = await fetchData(\n          instance,\n          platform,\n          `accounts/${userInfo.id}/following?limit=100 `,\n          token\n        );\n\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n      case \"sharkey\":\n        following = await fetchData(\n          instance,\n          platform,\n          `users/following `,\n          token,\n          userInfo.id\n        );\n        following = following.map((f) => f.followee);\n        break;\n      default:\n        break;\n    }\n\n    if (following && following.length) {\n      if (!following[0].acct) {\n        following.forEach((account) => {\n          account.acct = `${account.username}@${account.host || instance}`;\n        });\n      }\n    }\n\n    let follows = [];\n\n    following.forEach((account) => {\n      follows.push({\n        id: account.id,\n        username: account.username,\n        acct: account.acct,\n        display_name: account.display_name,\n        note: stripHTML(account?.note),\n        url: account.url,\n        avatar: account.avatar,\n      });\n    });\n\n    userData.follows = follows.filter(f => f.note);\n\n    saveData(\"fediverseFollowsData\", userData, 60);\n    startGame(userData);\n  }\n};\n\nexport default getData;\n"],"file":"getData.min.js"}
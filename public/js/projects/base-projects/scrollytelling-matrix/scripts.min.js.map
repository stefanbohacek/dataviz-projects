{"version":3,"sources":["scripts.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ready","fn","document","readyState","addEventListener","Utils","srand","seed","_seed","Date","now","rand","min","max","valueOrDefault","numbers","config","i","cfg","from","count","decimals","continuity","dfactor","Math","pow","data","this","push","round","isoDayOfWeek","dt","wd","getDay","startOfToday","d","getFullYear","getMonth","getDate","overshootDays","1970","overshoot_day","days_lasted","days_left","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","datasets","year","a","moment","b","dataset","overshootDayPassed","m","diff","add","_dataset$push","date","format","overshoot_day_passed","x","y","dataDescriptions","getElementById","html","forEach","datapoint","index","notes","dataYear","split","isHighlighted","innerHTML","Chart","defaults","color","colors","red","green","label","backgroundColor","c","dataIndex","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","width","chart","chartArea","right","left","height","bottom","top","scales","type","offset","time","unit","isoWeekday","parser","reverse","position","ticks","maxRotation","autoSkip","padding","font","size","grid","display","drawBorder","tickLength","displayFormats","week","options","animation","aspectRatio","plugins","legend","tooltip","displayColors","callbacks","title","context","v","layout","description","menuIcon","scroller","scrollama","setup","step","onStepEnter","response","highlighted","querySelectorAll","j","length","classList","remove","querySelector","direction","update","onStepExit","window","resize"],"mappings":"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","file":"scripts.min.js","sourcesContent":["function ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nready( function(){\n    const Utils = {\n        srand: function(seed) {\n            let _seed = Date.now();\n            _seed = seed;\n        },\n        rand: function(min, max) {\n            let _seed = Date.now();\n          min = valueOrDefault(min, 0);\n          max = valueOrDefault(max, 0);\n          _seed = (_seed * 9301 + 49297) % 233280;\n          return min + (_seed / 233280) * (max - min);\n        },\n        numbers: function(config) {\n          var cfg = config || {};\n          var min = valueOrDefault(cfg.min, 0);\n          var max = valueOrDefault(cfg.max, 100);\n          var from = valueOrDefault(cfg.from, []);\n          var count = valueOrDefault(cfg.count, 8);\n          var decimals = valueOrDefault(cfg.decimals, 8);\n          var continuity = valueOrDefault(cfg.continuity, 1);\n          var dfactor = Math.pow(10, decimals) || 0;\n          var data = [];\n          var i, value;\n\n          for (i = 0; i < count; ++i) {\n            value = (from[i] || 0) + this.rand(min, max);\n            if (this.rand() <= continuity) {\n              data.push(Math.round(dfactor * value) / dfactor);\n            } else {\n              data.push(null);\n            }\n          }\n\n          return data;\n        },\n        isoDayOfWeek: function(dt) {\n          let wd = dt.getDay(); // 0..6, from sunday\n          wd = (wd + 6) % 7 + 1; // 1..7 from monday\n          return '' + wd; // string so it gets parsed\n        },\n        startOfToday: function() {\n          const d = new Date();\n          return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0, 0);\n        }\n    }\n\n    const overshootDays = {\n        '1970': {\n            overshoot_day: '12-29',\n            days_lasted: 362,\n            days_left: 3\n        },\n        '1971': {\n            overshoot_day: '12-20',\n            days_lasted: 353,\n            days_left: 12\n        },\n        '1972': {\n            overshoot_day: '12-10',\n            days_lasted: 344,\n            days_left: 22\n        },\n        '1973': {\n            overshoot_day: '11-26',\n            days_lasted: 329,\n            days_left: 36\n        },\n        '1974': {\n            overshoot_day: '11-27',\n            days_lasted: 330,\n            days_left: 35\n        },\n        '1975': {\n            overshoot_day: '11-30',\n            days_lasted: 333,\n            days_left: 32\n        },\n        '1976': {\n            overshoot_day: '11-16',\n            days_lasted: 320,\n            days_left: 46\n        },\n        '1977': {\n            overshoot_day: '11-11',\n            days_lasted: 314,\n            days_left: 51\n        },\n        '1978': {\n            overshoot_day: '11-07',\n            days_lasted: 310,\n            days_left: 55\n        },\n        '1979': {\n            overshoot_day: '10-29',\n            days_lasted: 301,\n            days_left: 64\n        },\n        '1980': {\n            overshoot_day: '11-04',\n            days_lasted: 308,\n            days_left: 58\n        },\n        '1981': {\n            overshoot_day: '11-11',\n            days_lasted: 314,\n            days_left: 51\n        },\n        '1982': {\n            overshoot_day: '11-15',\n            days_lasted: 318,\n            days_left: 47\n        },\n        '1983': {\n            overshoot_day: '11-14',\n            days_lasted: 317,\n            days_left: 48\n        },\n        '1984': {\n            overshoot_day: '11-06',\n            days_lasted: 310,\n            days_left: 56\n        },\n        '1985': {\n            overshoot_day: '11-04',\n            days_lasted: 307,\n            days_left: 58\n        },\n        '1986': {\n            overshoot_day: '10-30',\n            days_lasted: 302,\n            days_left: 63\n        },\n        '1987': {\n            overshoot_day: '10-23',\n            days_lasted: 295,\n            days_left: 70\n        },\n        '1988': {\n            overshoot_day: '10-15',\n            days_lasted: 288,\n            days_left: 78\n        },\n        '1989': {\n            overshoot_day: '10-11',\n            days_lasted: 283,\n            days_left: 82\n        },\n        '1990': {\n            overshoot_day: '10-11',\n            days_lasted: 283,\n            days_left: 82\n        },\n        '1991': {\n            overshoot_day: '10-10',\n            days_lasted: 282,\n            days_left: 83\n        },\n        '1992': {\n            overshoot_day: '10-12',\n            days_lasted: 285,\n            days_left: 81\n        },\n        '1993': {\n            overshoot_day: '10-12',\n            days_lasted: 284,\n            days_left: 81\n        },\n        '1994': {\n            overshoot_day: '10-10',\n            days_lasted: 282,\n            days_left: 83\n        },\n        '1995': {\n            overshoot_day: '10-04',\n            days_lasted: 276,\n            days_left: 89\n        },\n        '1996': {\n            overshoot_day: '10-02',\n            days_lasted: 275,\n            days_left: 91\n        },\n        '1997': {\n            overshoot_day: '09-29',\n            days_lasted: 271,\n            days_left: 94\n        },\n        '1998': {\n            overshoot_day: '09-29',\n            days_lasted: 271,\n            days_left: 94\n        },\n        '1999': {\n            overshoot_day: '09-29',\n            days_lasted: 271,\n            days_left: 94\n        },\n        '2000': {\n            overshoot_day: '09-23',\n            days_lasted: 266,\n            days_left: 100\n        },\n        '2001': {\n            overshoot_day: '09-22',\n            days_lasted: 264,\n            days_left: 101\n        },\n        '2002': {\n            overshoot_day: '09-19',\n            days_lasted: 261,\n            days_left: 104\n        },\n        '2003': {\n            overshoot_day: '09-09',\n            days_lasted: 251,\n            days_left: 114\n        },\n        '2004': {\n            overshoot_day: '09-01',\n            days_lasted: 244,\n            days_left: 122\n        },\n        '2005': {\n            overshoot_day: '08-25',\n            days_lasted: 236,\n            days_left: 129\n        },\n        '2006': {\n            overshoot_day: '08-19',\n            days_lasted: 230,\n            days_left: 135\n        },\n        '2007': {\n            overshoot_day: '08-14',\n            days_lasted: 225,\n            days_left: 140\n        },\n        '2008': {\n            overshoot_day: '08-14',\n            days_lasted: 226,\n            days_left: 140\n        },\n        '2009': {\n            overshoot_day: '08-18',\n            days_lasted: 229,\n            days_left: 136\n        },\n        '2010': {\n            overshoot_day: '08-07',\n            days_lasted: 218,\n            days_left: 147\n        },\n        '2011': {\n            overshoot_day: '08-04',\n            days_lasted: 215,\n            days_left: 150\n        },\n        '2012': {\n            overshoot_day: '08-04',\n            days_lasted: 216,\n            days_left: 150\n        },\n        '2013': {\n            overshoot_day: '08-03',\n            days_lasted: 214,\n            days_left: 151\n        },\n        '2014': {\n            overshoot_day: '08-04',\n            days_lasted: 215,\n            days_left: 150\n        },\n        '2015': {\n            overshoot_day: '08-05',\n            days_lasted: 216,\n            days_left: 149\n        },\n        '2016': {\n            overshoot_day: '08-05',\n            days_lasted: 217,\n            days_left: 149\n        },\n        '2017': {\n            overshoot_day: '08-01',\n            days_lasted: 212,\n            days_left: 153\n        },\n        '2018': {\n            overshoot_day: '07-29',\n            days_lasted: 209,\n            days_left: 156\n        },\n        '2019': {\n            overshoot_day: '06-29',\n            days_lasted: 209,\n            days_left: 156\n        },\n        '2020': {\n            overshoot_day: '08-22',\n            days_lasted: 234,\n            days_left: 132\n        },\n        '2021': {\n            overshoot_day: '07-28',\n            days_lasted: 208,\n            days_left: 157\n        },\n    };\n\n\n    let datasets = [];\n\n    for ( let year = 1970; year <= 2021; year++ ){\n      let a = moment( `${year}-01-01` );\n      let b = moment( `${year}-12-31` );\n      let dataset = [];\n\n      let overshootDayPassed = false;\n\n      for ( let m = moment( a ); m.diff( b, 'days' ) <= 0; m.add( 1, 'days' ) ){\n        let date = m.format('YYYY-MM-DD');\n        if ( !overshootDayPassed && date === `${ year }-${ overshootDays[year].overshoot_day }` ){\n            overshootDayPassed = true;\n\n        }\n\n        let dt = new Date( date );\n\n        dataset.push( {\n            date: moment( date ).format( 'MMMM Do YYYY' ),\n            overshoot_day_passed: overshootDayPassed,\n            x: date,\n            y: Utils.isoDayOfWeek(dt),\n            date: date,\n            days_lasted: overshootDays[year].days_lasted,\n            days_left: overshootDays[year].days_left\n            // x: iso,\n            // y: Utils.isoDayOfWeek(dt),\n            // d: iso,\n            // v: Math.random() * 50\n\n\n        } );\n      }\n\n      datasets.push( dataset );\n    }\n\n    // console.log( datasets );\n    const dataDescriptions = document.getElementById( 'data-descriptions' );\n\n    let html = '';\n\n    datasets.forEach( function( datapoint, index ){\n        let notes = '';\n        let dataYear = datapoint[0].date.split( '-' )[0];\n\n        switch ( dataYear ){\n            case '2020':\n                notes = ' <a href=\"https://earthobservatory.nasa.gov/images/148477/covid-19-lockdowns-cut-pollution-but-not-all-of-it\" target=\"_blank\" rel=\"noopener\">Due to COVID-19</a>, the Overshoot Day was pushed further into the year.';\n        }\n\n        let isHighlighted = index === 0 ? 'bg-dark' : '';\n\n        html += `\n          <div class=\"step --min-vh-100 p-3 ${ isHighlighted }\" data-step=\"${ index }\">\n            <h2>${dataYear}</h2>\n            <p>In ${dataYear} the Overshoot Day was on <strong>${ moment( overshootDays[dataYear].overshoot_day ).format( 'MMMM Do' ) }</strong>, which means our planet lasted us <span class=\"days-lasted\">${ datapoint[0].days_lasted } days</span> with <span class=\"days-left\">${ datapoint[0].days_left } days</span> left in the year.${ notes }</p>\n          </div>\n        `;\n    } );\n\n    dataDescriptions.innerHTML = html;\n\n    Chart.defaults.color = \"#fff\";\n    // Chart.defaults.borderColor = \"#8bd3dd\";\n    // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n    // console.log( datasets[0] );\n\n    const colors = {\n        red: '#BF625A',\n        green: '#84D98A'\n    }\n\n    const data = {\n        datasets: [{\n            label: 'My Matrix',\n            data: datasets[0],\n            backgroundColor(c) {\n                // const value = c.dataset.data[c.dataIndex].v;\n                // const alpha = (10 + value) / 60;\n                // return Chart.helpers.color('green').alpha(alpha).rgbString();\n\n                return c.dataset.data[c.dataIndex].overshoot_day_passed ? colors.red : colors.green;\n            },\n            borderColor(c) {\n                // const value = c.dataset.data[c.dataIndex].v;\n                // const alpha = (10 + value) / 60;\n                // return Chart.helpers.color('green').alpha(alpha).darken(0.3).rgbString();\n                return c.dataset.data[c.dataIndex].overshoot_day_passed ? colors.red : colors.green;\n            },\n            borderWidth: 1,\n            hoverBackgroundColor: 'yellow',\n            hoverBorderColor: 'yellowgreen',\n            width(c) {\n                const a = c.chart.chartArea || {};\n                return (a.right - a.left) / 60 - 1;\n            },\n            height(c) {\n                const a = c.chart.chartArea || {};\n                return (a.bottom - a.top) / 10 - 1;\n            }\n        }]\n    };\n\n    const scales = {\n        y: {\n            type: 'time',\n            offset: true,\n            time: {\n                unit: 'day',\n                round: 'day',\n                isoWeekday: 1,\n                parser: 'd',\n                // displayFormats: {\n                //     // day: 'YYYY-MM-DD'\n                // }\n            },\n            reverse: true,\n            position: 'right',\n            ticks: {\n                maxRotation: 0,\n                autoSkip: true,\n                padding: 1,\n                font: {\n                    size: 0\n                }\n            },\n            grid: {\n                display: false,\n                drawBorder: false,\n                tickLength: 0\n            }\n        },\n        x: {\n            type: 'time',\n            position: 'bottom',\n            offset: true,\n            time: {\n                unit: 'week',\n                round: 'week',\n                isoWeekday: 1,\n                displayFormats: {\n                    week: 'MMMM'\n                }\n            },\n            ticks: {\n                maxRotation: 0,\n                autoSkip: true,\n                // padding: 20,\n                font: {\n                    color: '#fff',\n                    size: 12\n                }\n            },\n            grid: {\n                display: false,\n                drawBorder: false,\n                tickLength: 0,\n            }\n        }\n    };\n\n    const options = {\n        animation: false,\n        aspectRatio: 5,\n        plugins: {\n            legend: false,\n            tooltip: {\n                displayColors: false,\n                callbacks: {\n                    title() {\n                        return '';\n                    },\n                    label( context ) {\n                        const v = context.dataset.data[context.dataIndex];\n                        return moment( v.date ).format( 'MMMM Do YYYY' );\n                    }\n                }\n            },\n        },\n        scales: scales,\n        layout: {\n            padding: {\n                top: 10\n            }\n        }\n    };\n    const chart = new Chart( document.getElementById( 'chart' ), {\n        type: 'matrix',\n        data: data,\n        options: options\n    });\n\n    const description = document.getElementById( 'description' );\n    const menuIcon = document.getElementById( 'menu-icon' );\n    const scroller = scrollama();\n\n    scroller\n        .setup( {\n            step: '.step',\n        } )\n        .onStepEnter( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepEnter', response ); \n            // console.log( 'onStepEnter', response.index, response.direction );\n\n            let highlighted = document.querySelectorAll( '.bg-dark.step');\n\n            if ( highlighted ){\n                for ( let i = 0, j = highlighted.length; i < j; i++ ){\n                    highlighted[i].classList.remove( 'bg-dark' );\n                }\n            }\n\n            document.querySelector( `[data-step=\"${ response.index }\"]` ).classList.add( 'bg-dark' );\n\n            if ( menuIcon && ( ( response.direction === 'down' && response.index >= 0 ) || ( response.direction === 'up' && response.index <= datasets.length - 1 ) ) ){\n                menuIcon.classList.add( 'd-none' );\n                menuIcon.classList.add( 'd-md-block' );\n            }          \n\n            chart.data.datasets[0].data = datasets[response.index];\n            chart.update();\n\n            // description.innerHTML = datasets[response.index][datasets[response.index].length-1].d;\n            description.innerHTML = '';\n        } )\n        .onStepExit( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepExit', response );\n            // console.log( 'onStepExit', response.index, response.direction );\n\n            if ( menuIcon && ( ( response.direction === 'up' && response.index === 0 ) || ( response.direction === 'down' && response.index === datasets.length - 1 ) ) ){\n                menuIcon.classList.remove( 'd-none' );\n            }\n        }\n    );\n\n    window.addEventListener( 'resize', scroller.resize );\n} );\n"]}
{"version":3,"names":[],"mappings":"","sources":["scripts.js"],"sourcesContent":["/* globals Chart, scrollama, moment */\n\nfunction ready(fn) {\n    if (document.readyState !== 'loading'){\n        fn();\n    } else {\n        document.addEventListener('DOMContentLoaded', fn);\n    }\n}\n\nready(function(){\n    // const labels = [\n    //   'January',\n    //   'February',\n    //   'March',\n    //   'April',\n    //   'May',\n    //   'June',\n    //   'July',\n    //   'August',\n    //   'September',\n    //   'October',\n    //   'November',\n    //   'December'\n    // ];\n\n    const labels = [\n        ['2013/01', '2013/02', '2013/03', '2013/04', '2013/05', '2013/06', '2013/07', '2013/08', '2013/09', '2013/10', '2013/11', '2013/12'],\n        ['2014/01', '2014/02', '2014/03', '2014/04', '2014/05', '2014/06', '2014/07', '2014/08', '2014/09', '2014/10', '2014/11', '2014/12'],\n        ['2015/01', '2015/02', '2015/03', '2015/04', '2015/05', '2015/06', '2015/07', '2015/08', '2015/09', '2015/10', '2015/11', '2015/12'],\n        ['2016/01', '2016/02', '2016/03', '2016/04', '2016/05', '2016/06', '2016/07', '2016/08', '2016/09', '2016/10', '2016/11', '2016/12'],\n        ['2017/01', '2017/02', '2017/03', '2017/04', '2017/05', '2017/06', '2017/07', '2017/08', '2017/09', '2017/10', '2017/11', '2017/12'],\n        ['2018/01', '2018/02', '2018/03', '2018/04', '2018/05', '2018/06', '2018/07', '2018/08', '2018/09', '2018/10', '2018/11', '2018/12'],\n        ['2019/01', '2019/02', '2019/03', '2019/04', '2019/05', '2019/06', '2019/07', '2019/08', '2019/09', '2019/10', '2019/11', '2019/12'],\n        ['2020/01', '2020/02', '2020/03', '2020/04', '2020/05', '2020/06', '2020/07', '2020/08', '2020/09', '2020/10', '2020/11', '2020/12'],\n        ['2021/01', '2021/02', '2021/03', '2021/04', '2021/05', '2021/06', '2021/07', '2021/08', '2021/09', '2021/10', '2021/11', '2021/12']\n    ];\n\n    const datasets = [\n        [0, 10, 5, 2, 20, 30, 45, 35, 32, 25, 30, 15],\n        [5, 8, 20, 15, 25, 35, 20, 30, 25, 15, 25, 5],\n        [2, 14, 18, 5, 18, 40, 50, 45, 40, 25, 15, 10],\n        [5, 15, 12, 20, 35, 30, 40, 42, 35, 30, 20, 8],\n        [10, 20, 15, 20, 25, 35, 40, 40, 38, 45, 40, 27],\n        [15, 20, 35, 40, 35, 42, 60, 50, 42, 50, 35, 25],\n        [5, 15, 10, 25, 20, 30, 40, 55, 45, 25, 32, 28],\n        [12, 24, 38, 25, 38, 45, 50, 60, 55, 50, 48, 25],\n        [10, 20, 45, 35, 30, 40, 45, 35, 45, 50, 55, 52]\n    ];\n\n    const descriptionLabels = [\n        'Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        'Dolor magna eget est lorem ipsum dolor sit amet.',\n        'Sed viverra tellus in hac habitasse platea dictumst vestibulum rhoncus.',\n        'Tortor condimentum lacinia quis vel eros.',\n        'Neque vitae tempus quam pellentesque nec nam.',\n        'Mus mauris vitae ultricies leo integer.',\n        'Adipiscing commodo elit at imperdiet dui accumsan sit amet.',\n        'Arcu cursus vitae congue mauris rhoncus.',\n        'Tempor orci eu lobortis elementum.'\n    ];\n\n    // Chart.defaults.color = \"#172c66\";\n    // Chart.defaults.borderColor = \"#8bd3dd\";\n    // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n    const data = {\n        labels: labels[0],\n        datasets: [{\n            label: 'Data',\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: datasets[0],\n        }]\n    };\n\n    const chart = new Chart(\n        document.getElementById('chart'),\n        {\n            type: 'line',\n            data,\n            options: {\n                scales: {\n                    y: {\n                        suggestedMin: 0,\n                        suggestedMax: Math.max(...[].concat(...datasets)),\n                        ticks: {\n                          callback: function(value, index, values){\n                            return `$${ value }`;\n                        }\n                    }\n                }\n            },\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        title: function(tooltipItems) {\n                            const title = tooltipItems[0].label;\n                            const year = title.split('/')[0];\n                            const month = window.helpers.getMonth(parseInt(title.split('/')[1]) - 1);\n                            return `${month} ${year}`;\n                        },\n                        label: function(context){\n                            let label = context.dataset.label || '';\n                            if (label) {\n                              label += ': ';\n                          }\n                          if (context.parsed.y !== null) {\n                              label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(context.parsed.y);\n                          }\n                          return label;\n                      }\n                  }\n              }\n          }\n      }\n    });\n\n    const description = document.getElementById('description');\n    const menuIcon = document.getElementById('menu-icon');\n    const scroller = scrollama();\n\n    scroller\n        .setup({\n            step: '.step',\n        })\n        .onStepEnter(function(response){\n            /* response = { direction, element, index }, */\n            // console.log('onStepEnter', response); \n            // console.log('onStepEnter', response.index, response.direction);\n\n            if (menuIcon && ((response.direction === 'down' && response.index >= 0) || (response.direction === 'up' && response.index <= datasets.length - 1))){\n                menuIcon.classList.add('d-none');\n                menuIcon.classList.add('d-md-block');\n            }          \n\n            chart.data.datasets[0].data = datasets[response.index];\n            chart.data.labels = labels[response.index];\n            chart.data.datasets[0].pointBackgroundColor = [];\n\n            chart.data.datasets[0].data.forEach(function(d, i){\n                if (chart.data.datasets[0].data[i] >= 30){\n                    chart.data.datasets[0].pointBackgroundColor[i] = 'rgb(0,0,0)'; \n                } else {\n                    chart.data.datasets[0].pointBackgroundColor[i] = 'rgb(255 99 132)'; \n                }\n            });\n\n            chart.update();\n            description.innerHTML = descriptionLabels[response.index];\n\n            window.helpers.highlightMax(chart);\n\n        })\n        .onStepExit(function(response){\n            /* response = { direction, element, index }, */\n            // console.log('onStepExit', response);\n            // console.log('onStepExit', response.index, response.direction);\n\n            if (menuIcon && ((response.direction === 'up' && response.index === 0) || (response.direction === 'down' && response.index === datasets.length - 1))){\n                menuIcon.classList.remove('d-none');\n            }\n        }\n   );\n\n    window.addEventListener('resize', scroller.resize);\n});\n"],"file":"scripts.min.js"}
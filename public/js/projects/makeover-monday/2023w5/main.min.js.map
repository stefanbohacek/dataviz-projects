{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["/* globals Chart, mapboxgl, scrollama, moment */\n\nimport ready from \"/js/modules/ready.min.js\";\nimport { addMarkers } from \"/js/modules/mapboxHelper.min.js\";\n\nready(async () => {\n  // Chart.defaults.color = \"#172c66\";\n  // Chart.defaults.borderColor = \"#8bd3dd\";\n  // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n  const resp = await fetch(\"/data/nyc-pizza-slices/nyc-pizza-slices.json\");\n  let dataset = await resp.json();\n  dataset = dataset.map((d) => {\n    return {\n      name: d.name,\n      x: d.lat,\n      y: d.lng,\n    };\n  });\n\n  const data = {\n    datasets: [\n      {\n        label: \"Price of a slice vs restaurant rating\",\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: dataset,\n      },\n    ],\n  };\n\n  [...document.getElementsByClassName(\"step-next\")].forEach((btn) => {\n    btn.addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      const stepID = ev.target.getAttribute(\"href\");\n      document\n        .getElementById(stepID.replace(\"#\", \"\"))\n        .scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\",\n        });\n    });\n  });\n\n  const menuIcon = document.getElementById(\"menu-icon\");\n  const scroller = scrollama();\n\n  const locations = [];\n\n  [...document.getElementsByClassName(\"step\")].forEach((step) => {\n    const lng = parseFloat(step.dataset.lng);\n    const lat = parseFloat(step.dataset.lat);\n\n    const marker = new mapboxgl.Marker({ color: \"#232946\" }).setLngLat([\n      lng,\n      lat,\n    ]);\n    locations.push([lng, lat]);\n  });\n\n  mapboxgl.accessToken =\n    \"pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2xlZzlkbHJlMDRuZTNzcDZyMzdwNmZyZiJ9.7IMx3xgFUmr_MSU3QeEU8g\";\n  const map = new mapboxgl.Map({\n    container: \"map\",\n    style: \"mapbox://styles/mapbox/light-v11\",\n    center: [-74.5, 40],\n    zoom: 13,\n  });\n\n  const firstStep = document.getElementById(\"step-0\");\n\n  const lng = parseFloat(firstStep.dataset.lng);\n  const lat = parseFloat(firstStep.dataset.lat);\n\n  const options = {\n    center: [lng, lat],\n    essential: false,\n  };\n\n  map.flyTo(options);\n\n  let markers = [];\n\n  scroller\n    .setup({\n      step: \".step\",\n    })\n    .onStepEnter((response) => {\n      /* response = { direction, element, index }, */\n      // console.log('onStepEnter', response);\n      // console.log('onStepEnter', response.index, response.direction);\n\n      [...document.getElementsByClassName(\"active-step\")].forEach((el) =>\n        el.classList.remove(\"active-step\")\n      );\n      response.element.classList.add(\"active-step\");\n\n      const lng = parseFloat(response.element.dataset.lng);\n      const lat = parseFloat(response.element.dataset.lat);\n\n      const options = {\n        center: [lng, lat],\n        essential: false,\n      };\n\n      map.flyTo(options);\n\n      markers = addMarkers(\n        map,\n        locations,\n        markers,\n        \"#232946\",\n        \"#b8c1ec\",\n        response.index\n      );\n\n      // if (menuIcon && ((response.direction === 'down' && response.index >= 0) || (response.direction === 'up' && response.index <= datasets.length - 1))){\n      //     menuIcon.classList.add('d-none');\n      //     menuIcon.classList.add('d-md-block');\n      // }\n    })\n    .onStepExit((response) => {\n      /* response = { direction, element, index }, */\n      // console.log('onStepExit', response);\n      // console.log('onStepExit', response.index, response.direction);\n\n    //   if (\n    //     menuIcon &&\n    //     ((response.direction === \"up\" && response.index === 0) ||\n    //       (response.direction === \"down\" &&\n    //         response.index === datasets.length - 1))\n    //   ) {\n    //     menuIcon.classList.remove(\"d-none\");\n    //   }\n    });\n\n  window.addEventListener(\"resize\", scroller.resize);\n});\n"],"file":"main.min.js"}
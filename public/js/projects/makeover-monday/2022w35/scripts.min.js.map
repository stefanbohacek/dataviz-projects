{"version":3,"names":[],"mappings":"","sources":["scripts.js"],"sourcesContent":["/* globals Chart, scrollama, moment */\n\nfunction ready( fn ) {\n    if ( document.readyState !== 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nready( function(){\n    let showAll = false;\n\n    const dataset = [\n        {\n            \"country\": \"U.S.\",\n            \"budget\": 801,\n            \"percentage_global\": 37.9,\n            \"percentage_gdp\": 3.48,\n            \"logo\": \"us\"\n        },\n        {\n            \"country\": \"China\",\n            \"budget\": 293,\n            \"percentage_global\": 13.9,\n            \"percentage_gdp\": 1.74,\n            \"logo\": \"china\"\n        },\n        {\n            \"country\": \"India\",\n            \"budget\": 76.6,\n            \"percentage_global\": 3.6,\n            \"percentage_gdp\": 2.66,\n            \"logo\": \"india\"\n        },\n        {\n            \"country\": \"UK\",\n            \"budget\": 68.4,\n            \"percentage_global\": 3.2,\n            \"percentage_gdp\": 2.22,\n            \"logo\": \"uk\"\n        },\n        {\n            \"country\": \"Russia\",\n            \"budget\": 65.9,\n            \"percentage_global\": 3.1,\n            \"percentage_gdp\": 4.08,\n            \"logo\": \"russia\"\n        },\n        {\n            \"country\": \"France\",\n            \"budget\": 56.6,\n            \"percentage_global\": 2.7,\n            \"percentage_gdp\": 1.95,\n            \"logo\": \"france\"\n        },\n        {\n            \"country\": \"Germany\",\n            \"budget\": 56,\n            \"percentage_global\": 2.7,\n            \"percentage_gdp\": 1.34,\n            \"logo\": \"germany\"\n        },\n        {\n            \"country\": \"Saudi Arabia\",\n            \"budget\": 55.6,\n            \"percentage_global\": 2.6,\n            \"percentage_gdp\": 6.59,\n            \"logo\": \"saudi-arabia\"\n        },\n        {\n            \"country\": \"Japan\",\n            \"budget\": 54.1,\n            \"percentage_global\": 2.6,\n            \"percentage_gdp\": 1.07,\n            \"logo\": \"japan\"\n        },\n        {\n            \"country\": \"South Korea\",\n            \"budget\": 50.2,\n            \"percentage_global\": 2.4,\n            \"percentage_gdp\": 2.78,\n            \"logo\": \"south-korea\"\n        },\n        {\n            \"country\": \"Rest of the world\",\n            \"budget\": 536,\n            \"percentage_global\": 25.3,\n            \"logo\": \"world\"\n        }\n    ];\n\n    Chart.defaults.color = \"#172c66\";\n    Chart.defaults.borderColor = \"#8bd3dd\";\n    Chart.defaults.backgroundColor = \"#fef6e4\";\n\n    const dataLabels = dataset.map( function( datapoint ){\n        return datapoint.country;\n    } );\n\n    const dataValues = dataset.map( function( datapoint ){\n        return datapoint.budget;\n    } );\n\n    const logos = dataset.map(d => {\n        return {\n            src: `${ window.location.pathname }/images/logos/${d.logo}.png`,\n            width: 20,\n            height: 20\n        }        \n    });\n\n    const data = {\n        labels: [],\n        datasets: [{\n            label: 'Budget',\n            borderWidth: 1,\n            data: []\n        }]\n    };\n\n    const config = {\n        type: 'bar',\n        data: data,\n        options: {\n            scales: {\n                x: {\n                    display: false,\n                },\n                y: {\n                    display: false,\n                    suggestedMin: 50000,\n                    startAtZero: false,\n                    suggestedMax: Math.max( dataValues ),\n                    ticks: {\n                        callback: function( value, index, values ){\n                            return `${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( value )}B`;\n                        }\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                },\n                title: {\n                    display: true,\n                    text: 'Top 10 Countries by Military Spending'\n                },                \n                subtitle: {\n                    display: true,\n                    text: '2021 budget in billions of US Dollars',\n                    padding: {\n                        bottom: 30\n                    }                    \n                },                \n                tooltip: {\n                    callbacks: {\n                        label: function( context ){\n                            let label = context.dataset.label || '';\n                            if ( label ) {\n                              label += ': ';\n                          }\n                          if ( context.parsed.y !== null ) {\n                              label += `${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( context.parsed.y )}B`;\n                          }\n                          return label;\n                      }\n                  }\n                },\n                datalabels: {\n                    anchor: 'end',\n                    align  : 'start'        \n                },\n                labels: {\n                    render: 'image',\n                    textMargin: -16,\n                    images: logos\n                }\n            }            \n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    title: function( tooltipItems ) {\n                        const title = tooltipItems[0].label;\n                        const year = title.split( '/' )[0];\n                        const month = window.helpers.getMonth( parseInt( title.split( '/' )[1] ) - 1 );\n                        return `${month} ${year}`;\n                    },\n                    label: function( context ){\n                        let label = context.dataset.label || '';\n                        if ( label ) {\n                          label += ': ';\n                      }\n                      if ( context.parsed.y !== null ) {\n                          label += `$${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( context.parsed.y )}B`;\n                      }\n                      return label;\n                  }\n              }\n            }        \n        }        \n    };\n\n    const chart = new Chart( document.getElementById( 'chart' ), config );\n\n    const description = document.getElementById( 'description' );\n    const menuIcon = document.getElementById( 'menu-icon' );\n    const scroller = scrollama();\n\n    scroller\n        .setup( {\n            step: '.step',\n        } )\n        .onStepEnter( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepEnter', response ); \n            // console.log( 'onStepEnter', response.index, response.direction );\n\n            // if ( response.index === 0 ){\n            //     description.innerHTML = '';\n            // }\n\n            chart.options.scales.x.display = true;\n            chart.options.scales.y.display = true;\n\n            if ( !showAll ){\n                chart.data.datasets[0].data = dataValues.slice(0, response.index + 1);\n                chart.data.datasets[0].backgroundColor = dataset.map((d, i) => i === 0 ? 'rgb(255, 99, 132)' : Chart.defaults.backgroundColor);\n                chart.data.labels = dataLabels.slice(0, response.index + 1);\n                // chart.data.labels[response.index] = dataLabels[response.index];\n\n                description.innerHTML = '';\n                chart.update();\n                window.helpers.highlightMax( chart );\n            }\n\n            if ( response.index === dataset.length - 1 ){\n                showAll = true;\n            }\n\n        } )\n        .onStepExit( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepExit', response );\n            // console.log( 'onStepExit', response.index, response.direction );\n\n            if ( menuIcon && ( ( response.direction === 'up' && response.index === 0 ) || ( response.direction === 'down' && response.index === datasets.length - 1 ) ) ){\n                menuIcon.classList.remove( 'd-none' );\n            }\n        }\n    );\n\n    window.addEventListener( 'resize', scroller.resize );\n    \n    window.helpers.preloadImages( logos.map( function( logo ){\n        return logo.src;\n    } ) );\n\n} );\n"],"file":"scripts.min.js"}
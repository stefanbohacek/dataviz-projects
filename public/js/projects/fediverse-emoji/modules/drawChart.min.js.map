{"version":3,"names":[],"mappings":"","sources":["modules/drawChart.js"],"sourcesContent":["/* globals Chart */\n\nimport { backgroundColorFromData } from \"/js/modules/chartHelper.min.js\";\n\nconst menuIcon = document.getElementById(\"menu-icon\");\n\nconst drawChart = (userData) => {\n  // Chart.defaults.font.family = \"Noto Color Emoji\";\n  let highlightedValues = [];\n  // const labels = userData.allDomains.map((domain) => domain.domain);\n  // const datasets = [userData.allDomains.map((domain) => domain.connections)];\n\n  // Chart.defaults.color = \"#172c66\";\n  // Chart.defaults.borderColor = \"#8bd3dd\";\n  // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n  // const emojis = userData.emoji.slice(0, 10);\n  const emojis = userData.emoji;\n  const minFontSize = 25;\n  const maxFontSize = 50;\n  // const minFontSize = Math.min(200/emojis.length, 10);\n  // const maxFontSize = Math.min(300/emojis.length, 40);\n\n  // console.log({minFontSize, maxFontSize});\n\n  const maxCount = Math.max(...emojis.map((emoji) => emoji.count));\n  const minCount = Math.min(...emojis.map((emoji) => emoji.count));\n\n  const scale = (num, in_min, in_max, out_min, out_max) =>\n    ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n\n  const data = {\n    // labels: emojis.map(emoji => `#${emoji.emoji}`),\n    labels: emojis.map((emoji) => emoji.emoji),\n    datasets: [\n      {\n        label: `Your top ${emojis.length.toLocaleString()} emoji`,\n        // data: emojis.map((emoji) => emoji.count)\n        data: emojis.map((emoji) =>\n          scale(emoji.count, minCount, maxCount, minFontSize, maxFontSize)\n        ),\n        // data: emojis.map((d, i) => {\n        //   let size = 5 + d.count * 5;\n        //   if (size > 45){\n        //     size = 45;\n        //   }\n        //   if (i > emojis.length - 5){\n        //     size = 50 + (emojis.length - i);\n        //   }\n\n        //   return size;\n        // })\n      },\n    ],\n  };\n\n  const options = {\n    // fit: true,\n    // responsive: true,\n    rotationSteps: 0,\n    minRotation: 0,\n    padding: 4,\n    family: \"Noto Color Emoji\",\n    plugins: {\n      // font: {\n      //   family: \"Noto Color Emoji\"\n      // },\n      customCanvasBackgroundColor: \"#fff\",\n      tooltip: {\n        callbacks: {\n          title: (tooltipItems) => emojis[tooltipItems[0].dataIndex].emoji,\n          label: (context) => `used ${emojis[context.dataIndex].count} time(s)`,\n        },\n      },\n    },\n  };\n\n  options.family = \"Noto Color Emoji\";\n  const chart = new Chart(document.getElementById(\"chart\"), {\n    type: \"wordCloud\",\n    data: data,\n    options,\n    plugins: [\n      {\n        id: \"customCanvasBackgroundColor\",\n        beforeDraw: (chart, args, options) => {\n          const { ctx } = chart;\n          ctx.save();\n          ctx.globalCompositeOperation = \"destination-over\";\n          ctx.fillStyle = options.color || \"#fff\";\n          ctx.fillRect(0, 0, chart.width, chart.height);\n          ctx.restore();\n        },\n      },\n    ],\n  });\n\n  window.emojiChart = chart; \n\n\n\n  document.fonts.onloadingdone = () => {\n    if (window.emojiChart){\n      window.emojiChart.update();      \n    }\n  };\n};\n\nexport default drawChart;\n"],"file":"drawChart.min.js"}
{"version":3,"names":[],"mappings":"","sources":["modules/fetchData.js"],"sourcesContent":["import randomFromArray from '/js/modules/randomFromArray.min.js';\nimport fetchRequest from '/js/modules/fetchRequest.min.js';\n\nconst fetchData = async (instance, platform, endpoint, token, userId) => {\n  let fetchURL,\n    fetchOptions = {};\n\n  switch (platform) {\n    case \"mastodon\":\n    case \"hometown\":\n    case \"friendica\":\n    case \"pleroma\":\n    case \"akkoma\":\n    case \"gotosocial\":\n      fetchURL = `https://${instance}/api/v1/${endpoint}`;\n\n      fetchOptions = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      break;\n\n    case \"misskey\":\n    case \"calckey\":\n    case \"firefish\":\n    case \"foundkey\":\n    case \"magnetar\":\n      fetchURL = `https://${instance}/api/${endpoint}`;\n\n      fetchOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId,\n          limit: window.globalConfig.misskeyFetchLimit,\n        }),\n        method: \"POST\",\n      };\n      break;\n    default:\n      break;\n  }\n\n  try {\n    const resp = await fetchRequest(\n      fetchURL,\n      platform,\n      fetchOptions\n    );\n    return resp;\n  } catch (error) {\n    console.log(\"fetchData error\", error);\n    return [];\n  }\n};\n\nexport default fetchData;\n"],"file":"fetchData.min.js"}
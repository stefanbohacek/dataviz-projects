{"version":3,"names":[],"mappings":"","sources":["modules/getData.js"],"sourcesContent":["// global modules\n\nimport getServerPlatform from \"/js/modules/getServerPlatform.min.js\";\nimport getUrlParams from \"/js/modules/getUrlParams.min.js\";\nimport stripHtml from '/js/modules/stripHtml.min.js';\nimport sortArrayOfObjects from \"/js/modules/sortArrayOfObjects.min.js\";\nimport saveData from \"/js/modules/saveData.min.js\";\n\n// local modules\n\nimport fetchData from \"./fetchData.min.js\";\nimport showData from \"./showData.min.js\";\n\nconst greeting = document.getElementsByClassName(\"greeting\");\nconst loadingScreen = document.getElementById(\"loading\");\nconst profileImage = document.getElementsByClassName(\"profile-image\");\nconst loadingStatusEl = document.getElementById(\"loading-status\");\n\nconst getData = async () => {\n  let userData = {};\n  const { token, instance, username, userid, avatarUrl } = getUrlParams(true);\n\n  if (token && instance) {\n    let platform = await getServerPlatform(instance);\n    let userInfo = {},\n      profileImageURL;\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n        userInfo = await fetchData(\n          instance,\n          platform,\n          \"accounts/verify_credentials\",\n          token\n        );\n        profileImageURL = userInfo.avatar_static || userInfo.avatar;\n\n        if (userInfo.display_name) {\n          userData.name = userInfo.display_name || \"there\";\n        }\n\n        if (userInfo.acct) {\n          userData.account = `@${userInfo.acct}@${instance}`;\n          userData.accountURL = `https://${instance}/@${userInfo.acct}`;\n\n          if (!userData.name) {\n            userData.name = `@${userInfo.acct}`;\n          }\n        }\n\n        if (!userData.name) {\n          userData.name = \"there\";\n        }\n\n        if (profileImageURL) {\n          userData.profileImageURL = profileImageURL;\n        }\n\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n        userInfo.id = userid;\n        userData.name = username;\n        userData.account = `@${username}@${instance}`;\n        userData.profileImageURL = avatarUrl;\n\n        break;\n      default:\n        break;\n    }\n\n    loadingScreen.classList.remove(\"d-none\");\n    greeting[0].innerHTML = `Hello ${userData.name}!`;\n\n    if (userData.profileImageURL) {\n      profileImage[0].src = userData.profileImageURL;\n    }\n\n    let statusCount = userInfo.statuses_count;\n\n    if (statusCount > 10) {\n      statusCount = (Math.ceil(statusCount / 10) * 10).toLocaleString() + \"+\";\n    }\n\n    if (statusCount) {\n      loadingStatusEl.innerHTML = `(<span id=\"progress-items\">0</span>/${statusCount})`;\n    }\n\n    loading.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    let statuses = [];\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n        statuses = await fetchData(\n          instance,\n          platform,\n          `accounts/${userInfo.id}/statuses?limit=100`,\n          token\n        );\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n        platform = \"misskey\";\n        statuses = await fetchData(\n          instance,\n          platform,\n          `users/notes`,\n          token,\n          userInfo.id\n        );\n        break;\n      default:\n        break;\n    }\n\n    let emoji = {};\n\n    statuses.forEach((status) => {\n      // console.log(status);\n      if (\n        platform === \"misskey\" ||\n        userData.accountURL === status.account.url ||\n        (status.account.fqn && userData.account === `@${status.account.fqn}`)\n      ) {\n\n        const statusText = status.content || status.text || \"\";\n\n        if (statusText && statusText.length){\n          /*\n            Emoji\n            Emoji_Presentation\n            Extended_Pictographic\n          */\n          const statusContent = stripHtml(statusText);\n          const emojiFound = statusContent.match(/\\p{Emoji_Presentation}+/gu);\n\n          if (emojiFound && emojiFound.length){\n            console.log(statusContent, emojiFound);\n            const emojiArray = [...emojiFound.join('')];\n            emojiArray.forEach(e => {\n              emoji[e] = emoji[e] ? emoji[e] + 1 : 1;\n            });\n          }\n        }\n\n        // console.log(status);\n      }\n    });\n\n    console.log(emoji);\n    userData.emoji = emoji;\n    saveData(\"fediverseEmoji\", userData, 60);\n    showData(userData);\n  }\n};\n\nexport default getData;\n"],"file":"getData.min.js"}
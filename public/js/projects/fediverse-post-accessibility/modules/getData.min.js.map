{"version":3,"names":[],"mappings":"","sources":["modules/getData.js"],"sourcesContent":["// global modules\n\nimport getServerPlatform from \"/js/modules/getServerPlatform.min.js\";\nimport getUrlParams from \"/js/modules/getUrlParams.min.js\";\nimport countWords from \"/js/modules/countWords.min.js\";\nimport sortArrayOfObjects from \"/js/modules/sortArrayOfObjects.min.js\";\nimport saveData from \"/js/modules/saveData.min.js\";\n\n// local modules\n\nimport fetchData from \"./fetchData.min.js\";\nimport showData from \"./showData.min.js\";\n\nconst greeting = document.getElementsByClassName(\"greeting\");\nconst loadingScreen = document.getElementById(\"loading\");\nconst profileImage = document.getElementsByClassName(\"profile-image\");\nconst loadingStatusEl = document.getElementById(\"loading-status\");\n\nconst getData = async () => {\n  let userData = {};\n  const { token, instance, username, userid, avatarUrl } = getUrlParams(true);\n\n  userData.instance = instance;\n\n  if (token && instance) {\n    let platform = await getServerPlatform(instance);\n    let userInfo = {},\n      profileImageURL;\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n      case \"gotosocial\":\n        userInfo = await fetchData(\n          instance,\n          platform,\n          \"accounts/verify_credentials\",\n          token\n        );\n        profileImageURL = userInfo.avatar_static || userInfo.avatar;\n\n        if (userInfo.display_name) {\n          userData.name = userInfo.display_name || \"there\";\n        }\n\n        if (userInfo.acct) {\n          userData.account = `@${userInfo.acct}@${instance}`;\n          userData.accountURL = `https://${instance}/@${userInfo.acct}`;\n\n          if (!userData.name) {\n            userData.name = `@${userInfo.acct}`;\n          }\n        }\n\n        if (!userData.name) {\n          userData.name = \"there\";\n        }\n\n        if (profileImageURL) {\n          userData.profileImageURL = profileImageURL;\n        }\n\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n        userInfo.id = userid;\n        userData.name = username;\n        userData.account = `@${username}@${instance}`;\n        userData.profileImageURL = avatarUrl;\n\n        break;\n      default:\n        break;\n    }\n\n    loadingScreen.classList.remove(\"d-none\");\n    greeting[0].innerHTML = `Hello ${userData.name}!`;\n\n    if (userData.profileImageURL) {\n      profileImage[0].src = userData.profileImageURL;\n    }\n\n    loadingStatusEl.innerHTML = `<span id=\"progress-items\">0</span> posts found...`;\n\n    const loading = document.getElementById(\"loading\");\n\n    loading.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    let statuses = [];\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n      case \"gotosocial\":\n        statuses = await fetchData(\n          instance,\n          platform,\n          `accounts/${userInfo.id}/statuses?limit=100&only_media=true&exclude_reblogs=true`,\n          token\n        );\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n        platform = \"misskey\";\n        statuses = await fetchData(\n          instance,\n          platform,\n          `users/notes`,\n          token,\n          userInfo.id\n        );\n        break;\n      default:\n        break;\n    }\n\n    let hashtags = [];\n    let stats = {\n      postsTotal: 0,\n      postsWithVisualMedia: 0,\n      visualMediaTotal: 0,\n      visualMediaDescribed: 0,\n      visualMediaDescribedShort: 0,\n      statusesNeedFixing: [],\n    };\n\n    let mediaNeedsFixingCount = 0;\n\n    statuses.forEach((status) => {\n      if (mediaNeedsFixingCount < 24) {\n        stats.postsTotal++;\n\n        if (\n          platform === \"misskey\" ||\n          userData.accountURL === status.account.url ||\n          (status.account.fqn && userData.account === `@${status.account.fqn}`)\n        ) {\n          if (status?.tags?.length) {\n            if (!status.tags[0].name) {\n              status.tags = status.tags.map((tag) => {\n                return {\n                  name: tag,\n                };\n              });\n            }\n\n            status.tags.forEach((tag) => {\n              if (!hashtags.includes(tag.name)) {\n                hashtags.push(tag.name);\n              }\n            });\n          }\n        }\n\n        const attachments = status.media_attachments || status.files || [];\n\n        if (attachments && attachments.length) {\n          let statusNeedsFixing = false;\n          let statusHasVisualMedia = false;\n          let mediaNeedsFixingResults = [];\n\n          attachments.forEach((media) => {\n            if ([\"image\", \"video\", \"image/png\"].includes(media.type)) {\n              statusHasVisualMedia = true;\n              stats.visualMediaTotal++;\n\n              if (media.description) {\n                stats.visualMediaDescribed++;\n\n                if (countWords(media.description) < 6) {\n                  stats.visualMediaDescribedShort++;\n                }\n              } else {\n                statusNeedsFixing = true;\n                mediaNeedsFixingCount++;\n\n                mediaNeedsFixingResults.push(media.url);\n              }\n            }\n          });\n\n          if (statusHasVisualMedia) {\n            stats.postsWithVisualMedia++;\n          }\n\n          if (statusNeedsFixing) {\n            let statusURL;\n\n            if (status.url){\n              statusURL = status.url;\n            } else if (status.id){\n              statusURL = `https://${userData.instance}/notes/${status.id}`;\n            }\n\n            stats.statusesNeedFixing.push({\n              url: statusURL,\n              mediaNeedsFixing: mediaNeedsFixingResults,\n            });\n          }\n        }\n      }\n    });\n\n    // userData.hashtags = hashtags;\n    userData.stats = stats;\n    // console.log({ userData });\n\n    saveData('fediversePostAccessibility', userData, 60);\n    showData(userData);\n  }\n};\n\nexport default getData;\n"],"file":"getData.min.js"}
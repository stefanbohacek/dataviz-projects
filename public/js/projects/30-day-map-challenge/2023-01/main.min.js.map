{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["import ready from '/js/modules/ready.min.js';\nimport getMastodonURL from '/js/modules/getMastodonURL.min.js';\n\n\nready(async () => {\n\n    // mapboxgl.accessToken = 'pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2xvZ2g5MjkxMHR0dzJybzFjeWl1dWwxbCJ9.LrPluFJuIzcHp5Ts7HZb9Q';\n    mapboxgl.accessToken = 'pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2tlMjN2ZjljMDVsOTJ6cDgxNGgweTJ5ZiJ9.mJ0-aoLZIVU2bqjH3j9kKQ';\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      projection: \"equalEarth\",\n      style: \"mapbox://styles/mapbox/light-v11\",\n      center: [0, 30],\n      zoom: 3,\n    });\n  \n    const resp = await fetch(\"/data/fediverse/fediverse-gov-accounts.json\");\n    const data = await resp.json();\n    let countries = {};\n  \n    data.forEach((item) => {\n      if (countries[item.country]){\n        countries[item.country]++;\n      } else {\n        countries[item.country] = 1;\n      }\n      const longitude = parseFloat(item.physical_location.longitude);\n      const latitude = parseFloat(item.physical_location.latitude);\n  \n  \n      const marker = new mapboxgl.Marker()\n        .setLngLat([longitude, latitude])\n        .setPopup(\n          new mapboxgl.Popup({ offset: 25 }) \n            .setHTML(`\n              <h3>${item.itemLabel}</h3>\n              <p>\n                <a target=\"_blank\" href=\"${getMastodonURL(item.MastName)}\">\n                  @${item.MastName}\n                </a>\n                </p>\n              `)\n        )\n        .addTo(map);\n    });\n  \n    console.log({countries});\n    \n    \n    let countriesSortable = [];\n    for (var country in countries) {\n      countriesSortable.push([country, countries[country]]);\n    }\n    \n    countriesSortable.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n  \n    console.log({countriesSortable});\n  \n    const descriptionEl = document.getElementById(\"description\");\n  \n    let descriptionHTML = `\n    <details>\n      <summary>Government agencies with fediverse presence</summary>\n      <ul>\n        ${countriesSortable.map(country => `\n        <li>\n        ${country[0]}: ${country[1]}\n        </li>\n          \n        `).join('')}\n      </ul>\n    </details>\n    <p>\n      Source: wikidata.org | <a href=\"/data/fediverse/fediverse-gov-accounts.json\" target=\"_blank\">Download data</a>\n    </p>\n    `;\n  \n    descriptionEl.innerHTML = descriptionHTML;\n    \n    \n});\n"],"file":"main.min.js"}
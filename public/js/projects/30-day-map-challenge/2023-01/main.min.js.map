{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["/* globals mapboxgl */\n\nimport ready from \"/js/modules/ready.min.js\";\nimport getMastodonURL from \"/js/modules/getMastodonURL.min.js\";\n\nready(async () => {\n  // mapboxgl.accessToken = 'pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2xvZ2g5MjkxMHR0dzJybzFjeWl1dWwxbCJ9.LrPluFJuIzcHp5Ts7HZb9Q';\n  mapboxgl.accessToken =\n    \"pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2tlMjN2ZjljMDVsOTJ6cDgxNGgweTJ5ZiJ9.mJ0-aoLZIVU2bqjH3j9kKQ\";\n\n  const map = new mapboxgl.Map({\n    container: \"map\",\n    projection: \"equalEarth\",\n    style: \"mapbox://styles/mapbox/light-v11\",\n    center: [0, 30],\n    zoom: 3,\n  });\n\n  let resp, data;\n\n  resp = await fetch(\"/data/countries/countries.json\");\n  data = await resp.json();\n\n  let countriesLatLong = {};\n\n  data.forEach((country) => {\n    countriesLatLong[country.name] = {\n      lat: country.latitude,\n      long: country.longitude,\n    };\n  });\n\n  console.log({ countriesLatLong });\n\n  resp = await fetch(\"/data/fediverse/fediverse-gov-accounts.json\");\n  data = await resp.json();\n  let countries = {};\n\n  data.forEach((item) => {\n    if (countries[item.country]) {\n      countries[item.country]++;\n    } else {\n      countries[item.country] = 1;\n    }\n\n    const longitude = parseFloat(item.physical_location.longitude);\n    const latitude = parseFloat(item.physical_location.latitude);\n\n    const marker = new mapboxgl.Marker()\n      .setLngLat([longitude, latitude])\n      .setPopup(\n        new mapboxgl.Popup({ offset: 25 }).setHTML(`\n              <h3>${item.itemLabel}</h3>\n              <p>\n                <a target=\"_blank\" href=\"${getMastodonURL(item.MastName)}\">\n                  @${item.MastName}\n                </a>\n                </p>\n              `)\n      )\n      .addTo(map);\n  });\n\n  console.log({ countries });\n\n  let countriesSortable = [];\n  for (var country in countries) {\n    countriesSortable.push([country, countries[country]]);\n  }\n\n  countriesSortable.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  console.log({ countriesSortable });\n\n  const descriptionEl = document.getElementById(\"description\");\n\n  let descriptionHTML = `\n    <details>\n      <summary>Government agencies with <a href=\"https://jointhefediverse.net/\">fediverse<a> presence</summary>\n      <ul>\n        ${countriesSortable\n          .map(\n            (country) => `\n        <li>\n          <a\n            href=\"#\"\n            class=\"fly-to-country\"\n            data-country=\"${country[0]}\"\n            data-lat=\"${countriesLatLong[country[0]].lat}\"\n            data-long=\"${countriesLatLong[country[0]].long}\"\n          >\n            ${country[0]}: ${country[1]}\n          </a>\n        </li>\n          \n        `\n          )\n          .join(\"\")}\n      </ul>\n    </details>\n    <p>\n      Source: wikidata.org | <a href=\"/data/fediverse/fediverse-gov-accounts.json\" target=\"_blank\">Download data</a>\n    </p>\n    `;\n\n  descriptionEl.innerHTML = descriptionHTML;\n  if (window.innerWidth > 1000) {\n    document.querySelector(\"summary\").click();\n  }\n\n  [...document.getElementsByClassName(\"fly-to-country\")].forEach((el) => {\n    el.addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n\n      console.log({\n        lat: ev.target.dataset.lat,\n        long: ev.target.dataset.long,\n        country: ev.target.dataset.country,\n      });\n\n      const zoomMap = {\n        Austria: 6,\n        France: 6,\n        Germany: 6,\n        Luxembourg: 8,\n        Spain: 6,\n        \"United States\": 4,\n      };\n\n      map.flyTo({\n        center: [ev.target.dataset.long, ev.target.dataset.lat],\n        zoom: zoomMap[ev.target.dataset.country] || 7,\n        duration: 1200,\n      });\n    });\n  });\n});\n"],"file":"main.min.js"}
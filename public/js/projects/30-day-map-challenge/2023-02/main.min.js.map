{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["import ready from '/js/modules/ready.min.js';\nimport latLongDistance from '/js/modules/latLongDistance.min.js';\n\nconst getPopUpHTML = (item, nyc) => `\n  <a target=\"_blank\" href=\"${item.city}\">\n    <h3>${item.city}, ${item.country}</h3>\n  </a>\n  <p>\n    ${latLongDistance(\n      nyc.latitude,\n      nyc.longitude,\n      item.latitude,\n      item.longitude\n    )} miles\n    (${latLongDistance(\n      nyc.latitude,\n      nyc.longitude,\n      item.latitude,\n      item.longitude,\n      \"K\"\n    )} kilometers)\n    from NYC\n  </p>\n`;\n\nready(async () => {\n    const resp = await fetch(\"/data/nyc-sister-cities/data.json\");\n    let sisterCities = await resp.json();\n    const nyc = sisterCities.shift();\n    mapboxgl.accessToken = 'pk.eyJ1IjoiZm91cnRvbmZpc2giLCJhIjoiY2xvZ2g5MjkxMHR0dzJybzFjeWl1dWwxbCJ9.LrPluFJuIzcHp5Ts7HZb9Q';\n    \n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/light-v11\",\n      // center: [nyc.longitude, nyc.latitude],\n      // center: [0, 0],\n      center: [sisterCities[9].longitude, sisterCities[9].latitude],\n      zoom: 2,\n    });\n  \n    map.flyTo({\n      center: [nyc.longitude, nyc.latitude],\n      duration: 2400\n    });\n  \n  \n    let popups = [];\n  \n    const coordinates = sisterCities.map((item) => [\n      item.longitude,\n      item.latitude,\n    ]);\n  \n    const popup = new mapboxgl.Popup({ offset: 25 }).setHTML(`\n      <a target=\"_blank\" href=\"${nyc.wikipedia}\">\n        <h3>${nyc.city}, ${nyc.country}</h3>\n      </a>\n    `);\n  \n    popups.push(popup);\n  \n    map.on(\"load\", () => {\n      const marker = new mapboxgl.Marker()\n        .setLngLat([nyc.longitude, nyc.latitude])\n        .setPopup(popup)\n        .addTo(map);\n  \n      sisterCities.forEach((item) => {\n        map.addSource(`route-${item.city}`, {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"LineString\",\n              coordinates: [\n                [nyc.longitude, nyc.latitude],\n                [item.longitude, item.latitude],\n              ],\n            },\n          },\n        });\n  \n        map.addLayer({\n          id: `route-${item.city}`,\n          type: \"line\",\n          source: `route-${item.city}`,\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\",\n          },\n          paint: {\n            \"line-color\": \"#888\",\n            \"line-width\": 8,\n          },\n        });\n  \n        const popup = new mapboxgl.Popup({ offset: 25 }).setHTML(\n          getPopUpHTML(item, nyc)\n        );\n        popups.push(popup);\n  \n        const marker = new mapboxgl.Marker()\n          .setLngLat([item.longitude, item.latitude])\n          .setPopup(popup)\n          .addTo(map);\n\n          // marker.getElement().addEventListener('click', () => {\n          //   console.log(marker);\n          // });\n      });\n\n\n      map.on('click', function(e) {\n        map.flyTo({\n          center: e.lngLat,\n          duration: 2400          \n        });\n      });\n    \n    });\n  \n    const descriptionEl = document.getElementById(\"description\");\n  \n    let descriptionHTML = `\n    <p>\n      <a href=\"https://en.wikipedia.org/wiki/List_of_sister_cities_in_New_York\"><strong>New York's sister cities</strong></a> |\n      <a href=\"/data/nyc-sister-cities/data.json\" target=\"_blank\">Download</a>\n    </p>\n    <ul>\n      ${sisterCities\n        .map(\n          (item) => `\n      <li>\n      <a\n        class=\"show-city\"\n        data-city=\"${item.city.toLowerCase().replaceAll(\" \", \"-\")}\"\n        data-city-name=\"${item.city}\"\n        data-country-name=\"${item.country}\"\n        data-lat=\"${item.latitude}\"\n        data-long=\"${item.longitude}\"\n        href=\"#\"\n      >\n        ${item.city}, ${item.country}\n      </a>\n      </li>\n        \n      `\n        )\n        .join(\"\")}\n    </ul>\n    `;\n  \n    descriptionEl.innerHTML = descriptionHTML;\n  \n    [...document.getElementsByClassName(\"show-city\")].forEach((el) => {\n      el.addEventListener(\"click\", (ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        console.log(\"ev.target\", ev.target);\n        const lat = ev.target.dataset.lat;\n        const long = ev.target.dataset.long;\n  \n        console.log({ lat, long });\n  \n        console.log({ popups });\n  \n        popups.forEach((popup) => {\n          console.log(\"removing...\", popup);\n          popup.remove();\n        });\n  \n        popups = [];\n  \n        map.flyTo({\n          center: [long, lat],\n          duration: 2400\n        });\n  \n        const popup = new mapboxgl.Popup().setLngLat([long, lat]).setHTML(\n          getPopUpHTML(\n            {\n              city: ev.target.dataset.cityName,\n              country: ev.target.dataset.countryName,\n              wikipedia: ev.target.dataset.wikipedia,\n              latitude: lat,\n              longitude: long,\n            },\n            nyc\n          )\n        );\n  \n        popup.addTo(map);\n        popups.push(popup);\n      });\n    });\n\n\n\n\n\n\n\n\n});\n"],"file":"main.min.js"}
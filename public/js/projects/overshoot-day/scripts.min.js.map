{"version":3,"sources":["scripts.js"],"names":["ready","fn","document","readyState","addEventListener","labels","datasets","x","y","v","descriptionLabels","data","label","backgroundColor","borderColor","chart","Chart","getElementById","type","description","menuIcon","scroller","scrollama","setup","step","onStepEnter","response","direction","index","length","classList","add","update","innerHTML","onStepExit","remove","window","resize"],"mappings":"AAAA,YAAA,SAASA,OAAOC,GACgB,WAAvBC,SAASC,WACVF,IAEAC,SAASE,iBAAkB,mBAAoBH,GAIvDD,MAAO,WAgBH,GAAMK,KACD,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACzH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAGxHC,KAYGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,OAIfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,OAIfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,OAIfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,KACfF,EAAG,EAAGC,EAAG,EAAGC,EAAG,MAOlBC,GACF,qEACA,mDACA,0EACA,4CACA,gDACA,0CACA,8DACA,2CACA,sCAOEC,GACFN,OAAQA,EAAO,GACfC,WACIM,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,oBACbH,KAAML,EAAS,MAmFjBS,EAAQ,GAAIC,OAAOd,SAASe,eAAgB,UAC9CC,KAAM,SACNP,KAAMA,IAIJQ,EAAcjB,SAASe,eAAgB,eACvCG,EAAWlB,SAASe,eAAgB,aACpCI,EAAWC,WAEjBD,GACKE,OACGC,KAAM,UAETC,YAAa,SAAUC,GAKfN,IAAuC,SAAvBM,EAASC,WAAwBD,EAASE,OAAS,GAAgC,OAAvBF,EAASC,WAAsBD,EAASE,OAAStB,EAASuB,OAAS,KAChJT,EAASU,UAAUC,IAAK,UACxBX,EAASU,UAAUC,IAAK,eAG5BhB,EAAMJ,KAAKL,SAAS,GAAGK,KAAOL,EAASoB,EAASE,OAChDb,EAAMJ,KAAKN,OAASA,EAAOqB,EAASE,OAWpCb,EAAMiB,SACNb,EAAYc,UAAYvB,EAAkBgB,EAASE,SAKtDM,WAAY,SAAUR,GAKdN,IAAuC,OAAvBM,EAASC,WAAyC,IAAnBD,EAASE,OAA0C,SAAvBF,EAASC,WAAwBD,EAASE,QAAUtB,EAASuB,OAAS,IAClJT,EAASU,UAAUK,OAAQ,YAKvCC,OAAOhC,iBAAkB,SAAUiB,EAASgB","file":"scripts.min.js","sourcesContent":["function ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nready( function(){\n    // const labels = [\n    //   'January',\n    //   'February',\n    //   'March',\n    //   'April',\n    //   'May',\n    //   'June',\n    //   'July',\n    //   'August',\n    //   'September',\n    //   'October',\n    //   'November',\n    //   'December'\n    // ];\n\n    const labels = [\n        ['2013/01', '2013/02', '2013/03', '2013/04', '2013/05', '2013/06', '2013/07', '2013/08', '2013/09', '2013/10', '2013/11', '2013/12'],\n        ['2014/01', '2014/02', '2014/03', '2014/04', '2014/05', '2014/06', '2014/07', '2014/08', '2014/09', '2014/10', '2014/11', '2014/12'],\n        ['2015/01', '2015/02', '2015/03', '2015/04', '2015/05', '2015/06', '2015/07', '2015/08', '2015/09', '2015/10', '2015/11', '2015/12'],\n        ['2016/01', '2016/02', '2016/03', '2016/04', '2016/05', '2016/06', '2016/07', '2016/08', '2016/09', '2016/10', '2016/11', '2016/12'],\n        ['2017/01', '2017/02', '2017/03', '2017/04', '2017/05', '2017/06', '2017/07', '2017/08', '2017/09', '2017/10', '2017/11', '2017/12'],\n        ['2018/01', '2018/02', '2018/03', '2018/04', '2018/05', '2018/06', '2018/07', '2018/08', '2018/09', '2018/10', '2018/11', '2018/12'],\n        ['2019/01', '2019/02', '2019/03', '2019/04', '2019/05', '2019/06', '2019/07', '2019/08', '2019/09', '2019/10', '2019/11', '2019/12'],\n        ['2020/01', '2020/02', '2020/03', '2020/04', '2020/05', '2020/06', '2020/07', '2020/08', '2020/09', '2020/10', '2020/11', '2020/12'],\n        ['2021/01', '2021/02', '2021/03', '2021/04', '2021/05', '2021/06', '2021/07', '2021/08', '2021/09', '2021/10', '2021/11', '2021/12']\n    ];\n\n    const datasets = [\n        // [0, 10, 5, 2, 20, 30, 45, 35, 32, 25, 30, 15],\n        // [5, 8, 20, 15, 25, 35, 20, 30, 25, 15, 25, 5],\n        // [2, 14, 18, 5, 18, 40, 50, 45, 40, 25, 15, 10],\n        // [5, 15, 12, 20, 35, 30, 40, 42, 35, 30, 20, 8],\n        // [10, 20, 15, 20, 25, 35, 40, 40, 38, 45, 40, 27],\n        // [15, 20, 35, 40, 35, 42, 60, 50, 42, 50, 35, 25],\n        // [5, 15, 10, 25, 20, 30, 40, 55, 45, 25, 32, 28],\n        // [12, 24, 38, 25, 38, 45, 50, 60, 55, 50, 48, 25],\n        // [10, 20, 45, 35, 30, 40, 45, 35, 45, 50, 55, 52]\n\n        [\n            {x: 1, y: 1, v: 11},\n            {x: 2, y: 2, v: 22},\n            {x: 3, y: 3, v: 33}\n\n        ],\n        [\n            {x: 2, y: 3, v: 12},\n            {x: 1, y: 4, v: 18},\n            {x: 4, y: 5, v: 23}\n\n        ],\n        [\n            {x: 1, y: 1, v: 31},\n            {x: 2, y: 2, v: 12},\n            {x: 3, y: 3, v: 25}\n\n        ],\n        [\n            {x: 1, y: 1, v: 7},\n            {x: 2, y: 2, v: 35},\n            {x: 3, y: 3, v: 12}\n\n        ],\n\n\n    ];\n\n    const descriptionLabels = [\n        'Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        'Dolor magna eget est lorem ipsum dolor sit amet.',\n        'Sed viverra tellus in hac habitasse platea dictumst vestibulum rhoncus.',\n        'Tortor condimentum lacinia quis vel eros.',\n        'Neque vitae tempus quam pellentesque nec nam.',\n        'Mus mauris vitae ultricies leo integer.',\n        'Adipiscing commodo elit at imperdiet dui accumsan sit amet.',\n        'Arcu cursus vitae congue mauris rhoncus.',\n        'Tempor orci eu lobortis elementum.'\n    ];\n\n    // Chart.defaults.color = \"#172c66\";\n    // Chart.defaults.borderColor = \"#8bd3dd\";\n    // Chart.defaults.backgroundColor = \"rgb(255, 99, 132)\";\n\n    const data = {\n        labels: labels[0],\n        datasets: [{\n            label: 'Data',\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: datasets[0],\n        }]\n    };\n\n    const scales = {\n        // y: {\n        //     type: 'time',\n        //     left: 'left',\n        //     offset: true,\n        //     time: {\n        //         unit: 'week',\n        //         round: 'week',\n        //         isoWeekday: 1,\n        //         displayFormats: {\n        //             week: 'I'\n        //         }\n        //     },\n        //     ticks: {\n        //         maxRotation: 0,\n        //         autoSkip: true,\n        //         padding: 1\n        //     },\n        //     grid: {\n        //         display: false,\n        //         drawBorder: false,\n        //         tickLength: 0,\n        //     },\n        //     title: {\n        //         display: true,\n        //         font: {size: 15, weigth: 'bold'},\n        //         text: ({chart}) => chart.scales.x._adapter.format(Date.now(), 'MMM, yyyy'),\n        //         padding: 0\n        //     }\n        // },\n        // x: {\n        //     type: 'time',\n        //     position: 'top',\n        //     offset: true,\n        //     time: {\n        //         unit: 'day',\n        //         parser: 'i',\n        //         isoWeekday: 1,\n        //         displayFormats: {\n        //             day: 'iiiiii'\n        //         }\n        //     },\n        //     reverse: false,\n        //     ticks: {\n        //         source: 'data',\n        //         padding: 0,\n        //         maxRotation: 0,\n        //     },\n        //     grid: {\n        //         display: false,\n        //         drawBorder: false,\n        //     }\n        // }\n    };\n\n    const options = {\n        plugins: {\n            legend: false,\n            tooltip: {\n                displayColors: false,\n                callbacks: {\n                    title() {\n                        return '';\n                    },\n                    label(context) {\n                        const v = context.dataset.data[context.dataIndex];\n                        return ['d: ' + v.d, 'v: ' + v.v.toFixed(2)];\n                    }\n                }\n            },\n        },\n        scales: scales,\n        layout: {\n            padding: {\n                top: 10,\n            }\n        }\n    };\n\n    const chart = new Chart( document.getElementById( 'chart' ), {\n        type: 'matrix',\n        data: data,\n        // options: options\n    });\n\n    const description = document.getElementById( 'description' );\n    const menuIcon = document.getElementById( 'menu-icon' );\n    const scroller = scrollama();\n\n    scroller\n        .setup( {\n            step: '.step',\n        } )\n        .onStepEnter( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepEnter', response ); \n            // console.log( 'onStepEnter', response.index, response.direction );\n\n            if ( menuIcon && ( ( response.direction === 'down' && response.index >= 0 ) || ( response.direction === 'up' && response.index <= datasets.length - 1 ) ) ){\n                menuIcon.classList.add( 'd-none' );\n                menuIcon.classList.add( 'd-md-block' );\n            }          \n\n            chart.data.datasets[0].data = datasets[response.index];\n            chart.data.labels = labels[response.index];\n            // chart.data.datasets[0].pointBackgroundColor = [];\n\n            // chart.data.datasets[0].data.forEach( function( d, i ){\n            //     if ( chart.data.datasets[0].data[i] >= 30 ){\n            //         chart.data.datasets[0].pointBackgroundColor[i] = 'rgb(0,0,0)'; \n            //     } else {\n            //         chart.data.datasets[0].pointBackgroundColor[i] = 'rgb(255 99 132)'; \n            //     }\n            // } );\n\n            chart.update();\n            description.innerHTML = descriptionLabels[response.index];\n\n            // window.helpers.highlightMax( chart );\n\n        } )\n        .onStepExit( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepExit', response );\n            // console.log( 'onStepExit', response.index, response.direction );\n\n            if ( menuIcon && ( ( response.direction === 'up' && response.index === 0 ) || ( response.direction === 'down' && response.index === datasets.length - 1 ) ) ){\n                menuIcon.classList.remove( 'd-none' );\n            }\n        }\n    );\n\n    window.addEventListener( 'resize', scroller.resize );\n} );\n"]}
{"version":3,"names":[],"mappings":"","sources":["modules/loadDataOLD.js"],"sourcesContent":["const loadData = (options, cb) => {\n  let statusIndicator = document.getElementById(\"status\");\n  if (statusIndicator) {\n    statusIndicator.innerHTML = \"Loading data...\";\n  }\n  function loadDataFromUrl(url, cb) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          var data = JSON.parse(xhr.responseText);\n\n          if (statusIndicator) {\n            statusIndicator.parentNode.removeChild(statusIndicator);\n          }\n\n          if (data) {\n            if (typeof Storage !== \"undefined\") {\n              /* Set how long we want to cache the data for, in minutes. */\n              const expirationMinutes = 10;\n              let inXMinutes = new Date(\n                new Date().getTime() + expirationMinutes * 60 * 1000\n              );\n\n              localStorage.setItem(\"data\", JSON.stringify(data));\n              localStorage.setItem(\"data_expiration\", inXMinutes);\n            }\n\n            if (cb) {\n              cb(null, data);\n            }\n          } else {\n            throw \"data not loaded\";\n          }\n        } else {\n          if (cb) {\n            cb(xhr);\n          }\n        }\n      }\n    };\n    xhr.open(\"GET\", url, true);\n    xhr.send();\n  }\n\n  if (typeof Storage !== \"undefined\") {\n    let data = localStorage.getItem(\"data\");\n    const dataExpiration = Date.parse(localStorage.getItem(\"data_expiration\")),\n      dateNow = new Date();\n\n    if (dataExpiration && data) {\n      if (dateNow > dataExpiration) {\n        loadDataFromUrl(options.url, cb);\n      } else {\n        try {\n          data = JSON.parse(data);\n          if (statusIndicator) {\n            statusIndicator.parentNode.removeChild(statusIndicator);\n          }\n          if (cb) {\n            cb(null, data);\n          }\n        } catch (err) {\n          if (cb) {\n            cb(err, null);\n          }\n        }\n      }\n    } else {\n      loadDataFromUrl(options.url, cb);\n    }\n  } else {\n    loadDataFromUrl(options.url, cb);\n  }\n};\n\nexport default loadData;\n"],"file":"loadDataOLD.min.js"}
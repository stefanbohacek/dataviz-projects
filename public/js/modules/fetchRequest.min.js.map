{"version":3,"names":[],"mappings":"","sources":["modules/fetchRequest.js"],"sourcesContent":["import sleep from \"/js/modules/sleep.min.js\";\n\nconst fetchRequest = async (url, platform, options) => {\n  // console.log('debug:fetchRequest', url, platform, options);\n  // options.mode = \"no-cors\"\n\n  try {\n    const response = await fetch(url, options);\n    // console.log({\n    //   url,\n    //   response: {\n    //     status: response.status,\n    //     body: response.body,\n    //   }\n    // });\n    let data = await response.json();\n    let nextPage;\n\n    switch (platform) {\n      case \"mastodon\":\n      case \"hometown\":\n      case \"friendica\":\n      case \"pleroma\":\n      case \"akkoma\":\n      case \"gotosocial\":\n        if (/<([^>]+)>; rel=\"next\"/g.test(response.headers.get(\"link\"))) {\n          nextPage = /<([^>]+)>; rel=\"next\"/g.exec(\n            response.headers.get(\"link\")\n          )[1];\n        }\n\n        if (nextPage) {\n          const progressElWrapper = document.getElementById(\"progress-items-wrapper\");\n          const progressEl = document.getElementById(\"progress-items\");\n\n          if (progressElWrapper){\n            progressElWrapper.classList.remove(\"d-none\");\n          }\n\n          if (progressEl) {\n            progressEl.innerHTML = (\n              parseInt(progressEl.innerHTML.replace(/\\D/g, \"\")) + data.length\n            ).toLocaleString();\n          }\n\n          if (!window.skipToResults){\n            await sleep(500);\n            data = data.concat(await fetchRequest(nextPage, platform, options));\n          } else {\n            window.skipToResults = false;\n          }\n        }\n\n        break;\n      case \"misskey\":\n      case \"calckey\":\n      case \"firefish\":\n      case \"foundkey\":\n      case \"magnetar\":\n        if (data.length === window.globalConfig.misskeyFetchLimit) {\n          if (data && data.length) {\n            const lastItem = data.slice(-1)[0];\n            let body = JSON.parse(options.body);\n            body.untilId = lastItem.id;\n            options.body = JSON.stringify(body);\n          }\n\n          if (!window.skipToResults){\n            await sleep(500);\n            data = data.concat(await fetchRequest(url, platform, options));\n          } else {\n            window.skipToResults = false;            \n          }\n        }\n        break;\n      default:\n        break;\n    }\n\n    return data;\n  } catch (error) {\n    console.log(\"fetchRequest error\", { error });\n    return [];\n  }\n};\n\nexport default fetchRequest;\n"],"file":"fetchRequest.min.js"}